{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/zenghaochen/Desktop/AigenVizDashboard/src/components/dashboard/Map.tsx"],"sourcesContent":["// src/components/dashboard/Map.tsx\n'use client';\nimport React, { useEffect, useRef } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\n// Set Mapbox token directly for testing (replace with your actual token)\n// In production, use environment variables: process.env.NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN\nmapboxgl.accessToken = 'pk.eyJ1IjoiaHplbmciLCJhIjoiY202ank2NXg3MDYwcDJyb2JqeXZ5azY3NCJ9.UB53JETtOE63OoMxQFEK8gE'; // ⚠️ Replace with your actual Mapbox token\n\n// Farm field coordinates - update these with your actual field coordinates\nconst FIELD_BOUNDS = {\n  // Default coordinates (update these with your actual field coordinates)\n  center: [-96.698, 46.984] as [number, number],\n  bounds: [\n    [-96.7066, 46.9878] as [number, number], // Southwest corner\n    [-96.6979, 46.9841] as [number, number]  // Northeast corner\n  ] as [[number, number], [number, number]]\n};\n\nexport const Map = () => {\n  const mapContainer = useRef<HTMLDivElement>(null);\n  const map = useRef<mapboxgl.Map | null>(null);\n  \n  useEffect(() => {\n    // Safety check for window object (needed for SSR)\n    if (typeof window === 'undefined') return;\n    \n    // Wait to ensure the container is available\n    if (!mapContainer.current) return;\n    \n    // Don't reinitialize if map already exists\n    if (map.current) return;\n\n    console.log('Initializing map with container:', mapContainer.current);\n    \n    // Initialize map\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/satellite-v9',\n      center: FIELD_BOUNDS.center,\n      zoom: 16,\n      bearing: 0,\n      pitch: 0\n    });\n    \n    // Add navigation controls\n    map.current.addControl(new mapboxgl.NavigationControl(), 'top-right');\n    \n    // Add the field boundary when map loads\n    map.current.on('load', () => {\n      console.log('Map loaded successfully');\n      // Add a data source for the field boundary\n      map.current?.addSource('field-boundary', {\n        'type': 'geojson',\n        'data': {\n          'type': 'Feature',\n          'properties': {},\n          'geometry': {\n            'type': 'Polygon',\n            'coordinates': [[\n              FIELD_BOUNDS.bounds[0], // Bottom left [lng, lat]\n              [FIELD_BOUNDS.bounds[1][0], FIELD_BOUNDS.bounds[0][1]], // Bottom right [lng, lat]\n              FIELD_BOUNDS.bounds[1], // Top right [lng, lat]\n              [FIELD_BOUNDS.bounds[0][0], FIELD_BOUNDS.bounds[1][1]],  // Top left [lng, lat]\n              FIELD_BOUNDS.bounds[0] // Close the polygon by repeating the first point\n            ]]\n          }\n        }\n      });\n      \n      // Add a fill layer for the field\n      map.current?.addLayer({\n        'id': 'field-fill',\n        'type': 'fill',\n        'source': 'field-boundary',\n        'layout': {},\n        'paint': {\n          'fill-color': '#0080ff',\n          'fill-opacity': 0.3\n        }\n      });\n      \n      // Add a line layer for the field boundary\n      map.current?.addLayer({\n        'id': 'field-line',\n        'type': 'line',\n        'source': 'field-boundary',\n        'layout': {},\n        'paint': {\n          'line-color': '#0080ff',\n          'line-width': 3\n        }\n      });\n    });\n    \n    return () => {\n      if (map.current && typeof map.current.remove === 'function') {\n        try {\n          map.current.remove();\n        } catch (error) {\n          console.error('Error cleaning up map:', error);\n        }\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"flex flex-col bg-white rounded-lg shadow-[0px_1px_3px_rgba(0,0,0,0.25)] overflow-hidden max-md:max-w-full\">\n      {/* Map container */}\n      <div \n        ref={mapContainer} \n        className=\"w-full h-[400px] max-md:max-w-full\"\n        style={{ minHeight: \"400px\" }}\n      />\n    </div>\n  );\n};"],"names":[],"mappings":"AAAA,mCAAmC;;;;;AAEnC;AACA;;;AAFA;;;;AAKA,yEAAyE;AACzE,wFAAwF;AACxF,uJAAA,CAAA,UAAQ,CAAC,WAAW,GAAG,2FAA2F,2CAA2C;AAE7J,2EAA2E;AAC3E,MAAM,eAAe;IACnB,wEAAwE;IACxE,QAAQ;QAAC,CAAC;QAAQ;KAAO;IACzB,QAAQ;QACN;YAAC,CAAC;YAAS;SAAQ;QACnB;YAAC,CAAC;YAAS;SAAQ;KACpB;AACH;AAEO,MAAM,MAAM;;IACjB,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAC5C,MAAM,MAAM,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAuB;IAExC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yBAAE;YACR,kDAAkD;YAClD,uCAAmC;;YAAM;YAEzC,4CAA4C;YAC5C,IAAI,CAAC,aAAa,OAAO,EAAE;YAE3B,2CAA2C;YAC3C,IAAI,IAAI,OAAO,EAAE;YAEjB,QAAQ,GAAG,CAAC,oCAAoC,aAAa,OAAO;YAEpE,iBAAiB;YACjB,IAAI,OAAO,GAAG,IAAI,uJAAA,CAAA,UAAQ,CAAC,GAAG,CAAC;gBAC7B,WAAW,aAAa,OAAO;gBAC/B,OAAO;gBACP,QAAQ,aAAa,MAAM;gBAC3B,MAAM;gBACN,SAAS;gBACT,OAAO;YACT;YAEA,0BAA0B;YAC1B,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,uJAAA,CAAA,UAAQ,CAAC,iBAAiB,IAAI;YAEzD,wCAAwC;YACxC,IAAI,OAAO,CAAC,EAAE,CAAC;iCAAQ;oBACrB,QAAQ,GAAG,CAAC;oBACZ,2CAA2C;oBAC3C,IAAI,OAAO,EAAE,UAAU,kBAAkB;wBACvC,QAAQ;wBACR,QAAQ;4BACN,QAAQ;4BACR,cAAc,CAAC;4BACf,YAAY;gCACV,QAAQ;gCACR,eAAe;oCAAC;wCACd,aAAa,MAAM,CAAC,EAAE;wCACtB;4CAAC,aAAa,MAAM,CAAC,EAAE,CAAC,EAAE;4CAAE,aAAa,MAAM,CAAC,EAAE,CAAC,EAAE;yCAAC;wCACtD,aAAa,MAAM,CAAC,EAAE;wCACtB;4CAAC,aAAa,MAAM,CAAC,EAAE,CAAC,EAAE;4CAAE,aAAa,MAAM,CAAC,EAAE,CAAC,EAAE;yCAAC;wCACtD,aAAa,MAAM,CAAC,EAAE,CAAC,iDAAiD;qCACzE;iCAAC;4BACJ;wBACF;oBACF;oBAEA,iCAAiC;oBACjC,IAAI,OAAO,EAAE,SAAS;wBACpB,MAAM;wBACN,QAAQ;wBACR,UAAU;wBACV,UAAU,CAAC;wBACX,SAAS;4BACP,cAAc;4BACd,gBAAgB;wBAClB;oBACF;oBAEA,0CAA0C;oBAC1C,IAAI,OAAO,EAAE,SAAS;wBACpB,MAAM;wBACN,QAAQ;wBACR,UAAU;wBACV,UAAU,CAAC;wBACX,SAAS;4BACP,cAAc;4BACd,cAAc;wBAChB;oBACF;gBACF;;YAEA;iCAAO;oBACL,IAAI,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,YAAY;wBAC3D,IAAI;4BACF,IAAI,OAAO,CAAC,MAAM;wBACpB,EAAE,OAAO,OAAO;4BACd,QAAQ,KAAK,CAAC,0BAA0B;wBAC1C;oBACF;gBACF;;QACF;wBAAG,EAAE;IAEL,qBACE,6LAAC;QAAI,WAAU;kBAEb,cAAA,6LAAC;YACC,KAAK;YACL,WAAU;YACV,OAAO;gBAAE,WAAW;YAAQ;;;;;;;;;;;AAIpC;GAjGa;KAAA"}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}